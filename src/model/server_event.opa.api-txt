@private ServerEvents.allRecords : ('opaparse_v_7 -> void),
                                     dbset('opaparse_v_7, 'v0) -> void

ServerEvents.all_event : (evt -> void) -> void

@private ServerEvents.PlaceTransformer : string -> place

@private ServerEvents.newPrimaryKey :  -> int

ServerEvents.addEvent : evt -> outcome(evt, string)

@private ServerEvents.eventExists : evt -> outcome(evt, string)

ServerEvents.editEvent : evt -> outcome(evt, string)

ServerEvents.removeEvent : evt -> {failure : string} / {success : evt} / ...

ServerEvents.get_event : evt -> {failure : string} / {success : evt} / ...

ServerEvents.eventOnDate : Date.date -> bool

ServerEvents : {all_event : (evt -> void) -> void;
                 addEvent : evt -> outcome(evt, string);
                 editEvent : evt -> outcome(evt, string);
                 removeEvent : forall(, rows:, cols:...).
                                 evt ->
                                   {failure : string} / {success : evt} / ...;
                 get_event : forall(, rows:, cols:...).
                               evt ->
                                 {failure : string} / {success : evt} / ...;
                 eventOnDate : Date.date -> bool}

@private ServerEvents.countTuples : dbset('v0, 'v1) -> int

